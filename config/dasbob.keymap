/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NUMF 1
#define NUMJ 2
#define MOUSE 3
#define FUNC 4

/ {
        keymap {
                compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |       Q |        W |         E |         R  |    T    |    |    Y    |    U       |      I   |    O      |   P      |
// |       A |  LCTRL S |   MOUSE D |    NUMF F  |    G    |    |    H    |    NUMJ J  |   FUNC K |   RCTRL L |   ;      |
// |LSHIFT Z |        X |         C |         V  |    B    |    |    N    |    M       |      ,   |    .      | RSHIFT / |
//                      |   ESC     |   LALT DEL |    BSPC |    |   SPC   | RALT ENTER |     TAB  |
            bindings = <
&kp        Q &kp       W &kp       E &kp R        &kp T          &kp Y     &kp U        &kp    I   &kp O       &kp P
&kp        A &mt LCTRL S &lt MOUSE D &lt NUMF F   &kp G          &kp H     &lt NUMJ J   &lt FUNC K &mt RCTRL L &kp SEMI
&mt LSHIFT Z &kp       X &kp       C &kp V        &kp B          &kp N     &kp M        &kp COMMA  &kp DOT     &mt RSHIFT FSLH
                         &kp ESC     &mt LALT DEL &kp BSPC       &kp SPACE &mt RALT RET &kp TAB
            >;
        };

        numf_layer {
// ------------------------------------------------------------------------------------------------------------
// |   1    |     2   |    3  |    4  |    5  |       |    6   |    7    |    8    |    9    |   0   |
// |        |   LCTRL |       |  NUMF |       |       |   LEFT |   DOWN  |    UP   |  RIGHT  |       |
// | LSHIFT |         |       |       |       |       |   HOME |   PG_DN |  PG_UP  |   END   |   ]   |
//                    |       | TRANS | TRANS |       |  TRANS |   TRANS |  TRANS  |
            bindings = <
&kp   N1    &kp N2    &kp N3  &kp N4  &kp N5          &kp N6   &kp N7    &kp N8    &kp N9    &kp N0
&none       &kp LCTRL &none   &trans  &none           &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &none
&kp LSHIFT  &none     &none   &none   &none           &kp HOME &kp PG_DN &kp PG_UP &kp END   &kp RBKT
                      &none   &trans  &trans          &trans   &trans    &none
            >;
        };

        numj_layer {
// ------------------------------------------------------------------------------------------------------------
// |   1   |   2     |   3    |    4   |   5   |      |   6   |    7   |   8   |    9    |   0    |
// |   +   |   -     |   *    |    /   |   =   |      |       |   NUMJ |       |   CTRL  |        |
// |   [   |         |        |    \   |       |      |       |        |       |         | SHIFT  |
//                   |        |  TRANS | TRANS |      |  SPC  |  ENTER |       |
            bindings = <
&kp N1     &kp N2    &kp N3   &kp N4   &kp N5         &kp N6  &kp N7   &kp N8  &kp N9    &kp N0
&kp PLUS   &kp MINUS &kp STAR &kp FSLH &kp EQUAL      &none   &trans   &none   &kp RCTRL &none
&kp LBKT   &none     &none    &kp BSLH &none          &none   &none    &none   &none     &kp RSHIFT
                     &none    &trans   &trans         &trans  &trans   &none
            >;
        };

//        mouse_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |        |       |       |        |       | LGUI L | LGUI D  | LGUI U  | LGUI R  | PSCR  |
// |       | LCTRL  |  LT   |       |        |       | MOUSEL | MOUSED  | MOUSEU  | MOUSER  |   `   |
// | SHIFT |        |       |       |        |       |  MW_L  |  MW_D   |  MW_U   |  MW_R   |   '   |
//                  |       | LALT  | MOUSE2 |       | MOUSE1 | MOUSE3  |         |
//            bindings = <
//&none      &none     &none   &none   &none           &kp LGUI        &kp N7          &kp N8        &kp N9           &kp N0
//&none      &kp LCTRL &none   &trans  &none           &kp MOVE_LEFT   &kp MOVE_DOWN   &kp MOVE_UP   &kp MOVE_RIGHT   &kp GRAVE
//&kp LSHIFT &none     &none   &none   &none           &kp SCROLL_LEFT &kp SCROLL_DOWN &kp SCROLL_UP &kp SCROLL_RIGHT &kp SINGLE_QUOTE
//                     &none   &trans  &kp MB2         &kp MB1         &kp MB3         &trans
//            >;
//        };

        func_layer {
// ------------------------------------------------------------------------------------------------------------
// |    F1  |    F2   |    F3   |   F4   |         |        |          |          |       |         |        |
// |    F5  |    F6   |    F7   |   F8   |         |        |          |          |       |  LCTRL  |        |
// |    F9  |   F10   |   F11   |   F12  |         |        |          |     -    |       |         | RSHIFT |
//                    |         |  LGUI  | LGUIPGU |        |  LGUIPGD |   LALT   |       |
            bindings = <
    &kp F1   &kp F2    &kp F3    &kp F4    &bt BT_SEL 1     &out OUT_USB &none      &none  &none     &none
    &kp F5   &kp F6    &kp F7    &kp F8    &bt BT_SEL 2     &out OUT_BLE &none      &trans &kp LCTRL &none
    &kp F9   &kp F10   &kp F11   &kp F12   &bt BT_SEL 3     &bt BT_CLR   &none      &none  &none     &kp RSHIFT
                    &out OUT_BLE &kp LGUI  &kp LGUI         &kp LGUI     &kp LALT   &none
            >;
        };
    };
};
